// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using project.Data;

#nullable disable

namespace project.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20240625111612_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("project.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("KRS")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("PESEL")
                        .HasColumnType("int");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("client");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "adr1",
                            IsDeleted = false,
                            KRS = 12345,
                            LastName = "",
                            Mail = "@",
                            Name = "Dom",
                            Phone = 123
                        },
                        new
                        {
                            Id = 2,
                            Address = "adr2",
                            IsDeleted = false,
                            LastName = "Smith",
                            Mail = "@@",
                            Name = "Ala",
                            PESEL = 1234567,
                            Phone = 234
                        });
                });

            modelBuilder.Entity("project.Models.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdSoftwareVersion")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<bool>("Signed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdSoftwareVersion");

                    b.ToTable("contract");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            End = new DateTime(2024, 6, 25, 13, 16, 8, 961, DateTimeKind.Local).AddTicks(919),
                            IdClient = 1,
                            IdSoftwareVersion = 1,
                            Price = 200.0,
                            Signed = true,
                            Start = new DateTime(2024, 6, 25, 13, 16, 8, 961, DateTimeKind.Local).AddTicks(912)
                        });
                });

            modelBuilder.Entity("project.Models.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdSoftware")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("IdSoftware");

                    b.ToTable("discount");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            End = new DateTime(2024, 6, 25, 13, 16, 8, 961, DateTimeKind.Local).AddTicks(846),
                            IdSoftware = 1,
                            Name = "this",
                            Start = new DateTime(2024, 6, 25, 13, 16, 8, 961, DateTimeKind.Local).AddTicks(782),
                            Value = 200.0
                        });
                });

            modelBuilder.Entity("project.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdContract")
                        .HasColumnType("int");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("IdContract");

                    b.ToTable("payment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdContract = 1,
                            Value = 200.0
                        });
                });

            modelBuilder.Entity("project.Models.Software", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("software");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "1",
                            Description = "abc",
                            Name = "Windows"
                        });
                });

            modelBuilder.Entity("project.Models.SoftwareVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("SoftwareId")
                        .HasColumnType("int");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("SoftwareId");

                    b.ToTable("software_version");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Version = "10a"
                        });
                });

            modelBuilder.Entity("project.Models.Contract", b =>
                {
                    b.HasOne("project.Models.Client", "Client")
                        .WithMany("Contracts")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("project.Models.SoftwareVersion", "SoftwareVersion")
                        .WithMany("Contracts")
                        .HasForeignKey("IdSoftwareVersion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("SoftwareVersion");
                });

            modelBuilder.Entity("project.Models.Discount", b =>
                {
                    b.HasOne("project.Models.Software", "Software")
                        .WithMany("Discounts")
                        .HasForeignKey("IdSoftware")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Software");
                });

            modelBuilder.Entity("project.Models.Payment", b =>
                {
                    b.HasOne("project.Models.Contract", "Contract")
                        .WithMany("Payments")
                        .HasForeignKey("IdContract")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("project.Models.SoftwareVersion", b =>
                {
                    b.HasOne("project.Models.Software", null)
                        .WithMany("Contracts")
                        .HasForeignKey("SoftwareId");
                });

            modelBuilder.Entity("project.Models.Client", b =>
                {
                    b.Navigation("Contracts");
                });

            modelBuilder.Entity("project.Models.Contract", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("project.Models.Software", b =>
                {
                    b.Navigation("Contracts");

                    b.Navigation("Discounts");
                });

            modelBuilder.Entity("project.Models.SoftwareVersion", b =>
                {
                    b.Navigation("Contracts");
                });
#pragma warning restore 612, 618
        }
    }
}
